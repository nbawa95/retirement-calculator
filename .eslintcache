[{"/Users/nikitabawa/Desktop/retirement-calculator/src/index.js":"1","/Users/nikitabawa/Desktop/retirement-calculator/src/App.js":"2","/Users/nikitabawa/Desktop/retirement-calculator/src/reportWebVitals.js":"3","/Users/nikitabawa/Desktop/retirement-calculator/src/components/Home.js":"4"},{"size":500,"mtime":1609735408059,"results":"5","hashOfConfig":"6"},{"size":932,"mtime":1609735577383,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1609735408061,"results":"8","hashOfConfig":"6"},{"size":11150,"mtime":1609735557600,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"ie6qtc",{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"/Users/nikitabawa/Desktop/retirement-calculator/src/index.js",[],["21","22"],"/Users/nikitabawa/Desktop/retirement-calculator/src/App.js",["23","24"],"import logo from './logo.svg';\nimport './App.css';\nimport Home from \"./components/Home.js\";\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport replayArrow from \"./replay-arrow.png\";\n\nconst LOCATION = window.location;\n\nconst theme = createMuiTheme({\n  typography: {\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '\"Courier\"',\n    ].join(','),\n  },\n  overrides: {\n    MuiFormLabel: {\n      root: {\n        \"&$focused\": {\n          color: \"#46494c\",\n        }\n      },\n      focused: {}\n    }\n  }\n});\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <div>\n      <a href={LOCATION}>\n        <img style={{float: \"left\", width: \"30px\"}} src={replayArrow} />\n      </a>\n    </div>\n      <header className=\"App-header\">\n      <MuiThemeProvider theme={theme}>\n        <Home />\n      </MuiThemeProvider>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/nikitabawa/Desktop/retirement-calculator/src/reportWebVitals.js",[],"/Users/nikitabawa/Desktop/retirement-calculator/src/components/Home.js",["25","26","27","28"],"import React, {Component} from 'react';\nimport Typist from 'react-typist';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport NumberFormat from 'react-number-format';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport \"react-typist/dist/Typist.css\";\n\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      thousandSeparator\n    />\n  );\n}\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          showCurrentSavings: false,\n          renderCompoundRate: false,\n          renderExpectedSavings: false,\n          renderDesiredRetirementAmount: false,\n          showCompoundRate: false,\n          showExpectedSavings: false,\n          showDesiredRetirementAmount: false,\n          currentSavings: 0,\n          compoundRate: 0.08,\n          expectedSavings: 0,\n          desiredRetirementAmount: 0,\n          yearsToRetire: 0,\n          showFinal: false,\n        }\n        this.currentSavingsDone = this.currentSavingsDone.bind(this);\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n        this.compoundRateDone = this.compoundRateDone.bind(this);\n        this.handleYes = this.handleYes.bind(this);\n        this.handleNo = this.handleNo.bind(this);\n        this.handleKeyDownCompoundRate = this.handleKeyDownCompoundRate.bind(this);\n        this.expectedSavingsDone = this.expectedSavingsDone.bind(this);\n        this.handleKeyDownExpectedSavings = this.handleKeyDownExpectedSavings.bind(this);\n        this.desiredRetirementAmountDone = this.desiredRetirementAmountDone.bind(this);\n        this.handleKeyDownDesiredRetirementAmount = this.handleKeyDownDesiredRetirementAmount.bind(this);\n        this.calculate = this.calculate.bind(this);\n        this.readyToShowFinal = this.readyToShowFinal.bind(this);\n    }\n\n    currentSavingsDone() {\n      this.setState({\n        showCurrentSavings: true\n      });\n    }\n\n    handleKeyDown(e) {\n      if (e.key === 'Enter') {\n        console.log(e.target.value);\n        this.setState({\n          renderCompoundRate: true,\n          currentSavings: e.target.value\n        });\n      }\n    }\n\n    compoundRateDone() {\n      console.log('i think this is unecessary');\n    }\n\n    handleYes() {\n      this.setState({\n        showCompoundRate: true\n      });\n    }\n\n    handleNo() {\n      this.setState({\n        renderExpectedSavings: true\n      });\n    }\n\n    handleKeyDownCompoundRate(e) {\n      if (e.key === 'Enter') {\n        console.log(e.target.value);\n        this.setState({\n          renderExpectedSavings: true,\n          compoundRate: e.target.value\n        });\n      }\n    }\n\n    expectedSavingsDone() {\n      this.setState({\n        showExpectedSavings: true\n      });\n    }\n\n    handleKeyDownExpectedSavings(e) {\n      console.log('in the expectedSavingskeydown');\n      if (e.key === 'Enter') {\n        console.log(e.target.value);\n        this.setState({\n          renderDesiredRetirementAmount: true,\n          expectedSavings: e.target.value\n        });\n      }\n    }\n\n    desiredRetirementAmountDone() {\n      this.setState({\n        showDesiredRetirementAmount: true\n      });\n    }\n\n    handleKeyDownDesiredRetirementAmount(e) {\n      if (e.key === 'Enter') {\n        console.log(this.state.compoundRate);\n        this.setState({\n          desiredRetirementAmount: e.target.value,\n          yearsToRetire: this.calculate(this.state.currentAmount, this.state.compoundRate, this.state.desiredAmount),\n          readyToCalc: true\n        });\n      }\n    }\n\n    readyToShowFinal() {\n      this.calculateFinal();\n    }\n\n    calculateFinal() {\n      let body = {\n        \"current_amount\": this.state.currentSavings.replace(/\\,/g,''),\n        \"yearly_deposit\": this.state.expectedSavings.replace(/\\,/g,''),\n        \"desired_amount\": this.state.desiredRetirementAmount.replace(/\\,/g,''),\n        \"compound_rate\": this.state.compoundRate / 100\n      }\n      const rawResponse = fetch('https://r2a06cofy9.execute-api.us-east-2.amazonaws.com/default/calc_retirement', {\n        method: 'POST',\n        body: JSON.stringify(body)\n      }).then(response => response.json())\n      .then(result => {\n        console.log('Success:', result);\n        this.setState({\n          yearsToRetire: result[\"years_to_retirement\"],\n          showFinal: true\n        });\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n    }\n\n    calculate(currentAmount, compoundRate, desiredAmount) {\n      var total = (desiredAmount / compoundRate) - currentAmount - 1;\n      return Math.sqrt(total);\n    }\n\n    render() {\n      const classes = makeStyles((theme) => ({\n        root: {\n          '& > *': {\n            margin: theme.spacing(1),\n          },\n        },\n      }));\n      return (\n          <div style={{textAlign: \"left\", padding: \"10%\"}}>\n            <div>\n            <Typist\n              onTypingDone={this.currentSavingsDone}\n              cursor={{show: false}}\n              avgTypingDelay={20}\n            >\n              <div className=\"textLine\">\n                hi, so you're interested to know when you can retire?\n              </div>\n              <Typist.Delay ms={500} />\n              <div className=\"textLine\">\n                i can help you with that. let's do some calculations.\n              </div>\n              <Typist.Delay ms={500} />\n              <div className=\"textLine\">\n                first things first - how much do you currently have in savings?\n              </div>\n            </Typist>\n            {this.state.showCurrentSavings ?\n              <TextField\n                id=\"standard-basic\"\n                label=\"current savings\"\n                InputProps={{\n                  startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                  inputComponent: NumberFormatCustom\n                }}\n                style={{paddingBottom: \"20px\"}}\n                onKeyDown={this.handleKeyDown}\n              /> : null }\n            {this.state.renderCompoundRate ?\n              <Typist\n                onTypingDone={this.compoundRateDone}\n                cursor={{show: false}}\n                avgTypingDelay={20}\n              >\n              <div className=\"textLine\">\n                <span>cool. i'm going to assume you're investing this $$$ and not just keeping this as cash like a dud.</span><Typist.Backspace count={5} delay={500} /><span>n overly cautious person.</span>\n              </div>\n              <Typist.Delay ms={500} />\n              <div className=\"textLine\">\n                if you're investing this in the stock market it's safe to assume it will compound at an 8% rate annually.\n              </div>\n              <Typist.Delay ms={500} />\n              <div className=\"textLine\">\n                this has been the historical average for the past half century.\n              </div>\n              <div className=\"textLine\">\n                <span>would you like to complicate things?</span><Typist.Backspace count={18} delay={500} /><span>enter a different compound rate?</span>\n              </div>\n              <div className={classes.root} style={{display: \"flex\", paddingBottom: \"20px\"}}>\n                <Button variant=\"outlined\" style={{marginRight: \"5px\"}} onClick={this.handleYes}>yes</Button>\n                <Button variant=\"outlined\" onClick={this.handleNo}>no</Button>\n              </div>\n            </Typist>\n            : null }\n            {this.state.showCompoundRate ?\n              <TextField\n                id=\"standard-basic\"\n                label=\"compound rate\"\n                style={{paddingBottom: \"20px\"}}\n                InputProps={{\n                  endAdornment: <InputAdornment position=\"start\">%</InputAdornment>,\n                }}\n                onKeyDown={this.handleKeyDownCompoundRate}\n              /> : null }\n            {this.state.renderExpectedSavings ?\n              <Typist\n                onTypingDone={this.expectedSavingsDone}\n                cursor={{show: false}}\n                avgTypingDelay={20}\n              >\n              <div className=\"textLine\">\n                alright moving on. How much do you plan on saving every year?\n              </div>\n              <Typist.Delay ms={500} />\n              <div className=\"textLine\">\n                don't worry, I won't judge.\n              </div>\n              </Typist>\n              : null }\n            {this.state.showExpectedSavings ?\n              <TextField\n                id=\"standard-basic\"\n                label=\"expected savings\"\n                style={{paddingBottom: \"20px\"}}\n                InputProps={{\n                  startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                  inputComponent: NumberFormatCustom\n                }}\n                onKeyDown={this.handleKeyDownExpectedSavings}\n              /> : null }\n            {this.state.renderDesiredRetirementAmount ?\n              <Typist\n                onTypingDone={this.desiredRetirementAmountDone}\n                cursor={{show: false}}\n                avgTypingDelay={20}\n              >\n              <div className=\"textLine\">\n                and how much do you want to withdraw each year when you retire?\n              </div>\n              </Typist>\n              : null }\n            {this.state.showDesiredRetirementAmount ?\n              <TextField\n                id=\"standard-basic\"\n                label=\"yearly retirement\"\n                style={{paddingBottom: \"20px\"}}\n                InputProps={{\n                  startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                  inputComponent: NumberFormatCustom\n                }}\n                onKeyDown={this.handleKeyDownDesiredRetirementAmount}\n              /> : null }\n            {this.state.readyToCalc ?\n              <Typist\n                cursor={{show: false}}\n                onTypingDone={this.readyToShowFinal}\n                avgTypingDelay={20}\n              >\n                <div className=\"textLine\">ok time to crunch some numbers</div>\n                <Typist.Delay ms={800} />\n                <div className=\"textLine\">almost ready.</div>\n                <Typist.Delay ms={500} />\n                <div className=\"textLine\">aaaaand done.</div>\n                <Typist.Delay ms={800} />\n              </Typist>\n              : null}\n            {this.state.showFinal ?\n              <Typist\n                cursor={{show: false}}\n                avgTypingDelay={20}\n              >\n               <div className=\"textLine\">if you start with ${this.state.currentSavings} and invest ${this.state.expectedSavings} every year with a compound rate of {this.state.compoundRate.toString()}%, you will be able to retire in {this.state.yearsToRetire.toString()} years and withdraw ${this.state.desiredRetirementAmount} each year in your retirement.</div>\n              </Typist>\n              : null }\n            </div>\n          </div>\n      )\n    }\n}\n\nexport default Home\n",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":1,"column":8,"nodeType":"35","messageId":"36","endLine":1,"endColumn":12},{"ruleId":"37","severity":1,"message":"38","line":33,"column":9,"nodeType":"39","endLine":33,"endColumn":73},{"ruleId":"40","severity":1,"message":"41","line":137,"column":62,"nodeType":"42","messageId":"43","endLine":137,"endColumn":63,"suggestions":"44"},{"ruleId":"40","severity":1,"message":"41","line":138,"column":63,"nodeType":"42","messageId":"43","endLine":138,"endColumn":64,"suggestions":"45"},{"ruleId":"40","severity":1,"message":"41","line":139,"column":71,"nodeType":"42","messageId":"43","endLine":139,"endColumn":72,"suggestions":"46"},{"ruleId":"33","severity":1,"message":"47","line":142,"column":13,"nodeType":"35","messageId":"36","endLine":142,"endColumn":24},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-escape","Unnecessary escape character: \\,.","Literal","unnecessaryEscape",["50","51"],["52","53"],["54","55"],"'rawResponse' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"56","fix":"57","desc":"58"},{"messageId":"59","fix":"60","desc":"61"},{"messageId":"56","fix":"62","desc":"58"},{"messageId":"59","fix":"63","desc":"61"},{"messageId":"56","fix":"64","desc":"58"},{"messageId":"59","fix":"65","desc":"61"},"removeEscape",{"range":"66","text":"67"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"68","text":"69"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"70","text":"67"},{"range":"71","text":"69"},{"range":"72","text":"67"},{"range":"73","text":"69"},[3874,3875],"",[3874,3874],"\\",[3946,3947],[3946,3946],[4026,4027],[4026,4026]]